# Generated by Django 4.2.2 on 2023-06-30 08:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=128)),
                ('is_email_valid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nickname', models.CharField(max_length=32, null=True, unique=True)),
                ('birth', models.IntegerField(null=True)),
                ('sex', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=10, null=True)),
                ('avatar', models.CharField(max_length=30, null=True)),
                ('survey_result_count', models.IntegerField(default=0, null=True)),
                ('score', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('morning', models.BooleanField(default=False, verbose_name='아침')),
                ('afternoon', models.BooleanField(default=False, verbose_name='점심')),
                ('evening', models.BooleanField(default=False, verbose_name='저녁')),
                ('inside', models.BooleanField(default=False, verbose_name='실내')),
                ('outside', models.BooleanField(default=False, verbose_name='실외')),
                ('solo', models.BooleanField(default=False, verbose_name='혼자')),
                ('group', models.BooleanField(default=False, verbose_name='여럿이')),
                ('pay', models.BooleanField(default=False, verbose_name='유료')),
                ('free', models.BooleanField(default=False, verbose_name='무료')),
                ('static', models.BooleanField(default=False, verbose_name='정적인')),
                ('dynamic', models.BooleanField(default=False, verbose_name='동적인')),
                ('relaxation', models.IntegerField(default=0, verbose_name='피로해소')),
                ('immunity', models.IntegerField(default=0, verbose_name='면역력 향상')),
                ('easy', models.IntegerField(default=0, verbose_name='누구나 쉽게')),
                ('sleep', models.IntegerField(default=0, verbose_name='수면 개선')),
                ('circulation', models.IntegerField(default=0, verbose_name='혈액순환 촉진')),
                ('muscle', models.IntegerField(default=0, verbose_name='근육이완')),
                ('stability', models.IntegerField(default=0, verbose_name='정서 안정')),
                ('concentration', models.IntegerField(default=0, verbose_name='집중력 향상')),
                ('creativity', models.IntegerField(default=0, verbose_name='창의력 발휘')),
                ('satisfaction', models.IntegerField(default=0, verbose_name='만족감 증진')),
                ('achievement', models.IntegerField(default=0, verbose_name='성취감')),
                ('depression', models.IntegerField(default=0, verbose_name='우울감 개선')),
                ('selfesteem', models.IntegerField(default=0, verbose_name='자아존중감 형성')),
                ('organization', models.IntegerField(default=0, verbose_name='감정 정리')),
                ('expression', models.IntegerField(default=0, verbose_name='표현력 향상')),
                ('precision', models.IntegerField(default=0, verbose_name='꼼꼼함 향상')),
                ('easylearn', models.IntegerField(default=0, verbose_name='배우기 쉬운')),
                ('dexterity', models.IntegerField(default=0, verbose_name='손재주 향상')),
                ('motor', models.IntegerField(default=0, verbose_name='미세 운동 능력 발달')),
                ('memory', models.IntegerField(default=0, verbose_name='기억력 향상')),
                ('skeletal', models.IntegerField(default=0, verbose_name='근육과 골격 강화')),
                ('balance', models.IntegerField(default=0, verbose_name='균형감각 향상')),
                ('flexibility', models.IntegerField(default=0, verbose_name='유연성 향상')),
                ('sociability', models.IntegerField(default=0, verbose_name='사회성 향상')),
                ('cooperation', models.IntegerField(default=0, verbose_name='협동성 향상')),
                ('bloodpressure', models.IntegerField(default=0, verbose_name='혈압 낮춤')),
                ('problemsolving', models.IntegerField(default=0, verbose_name='문제 해결 능력 향상')),
                ('innerpeace', models.IntegerField(default=0, verbose_name='마음 진정')),
                ('positive', models.IntegerField(default=0, verbose_name='긍정적인 생각')),
                ('mood', models.IntegerField(default=0, verbose_name='기분 전환')),
                ('anxiety', models.IntegerField(default=0, verbose_name='불안 해소')),
                ('bedtime', models.IntegerField(default=0, verbose_name='취침 전')),
                ('socialrelationship', models.IntegerField(default=0, verbose_name='사회적 관계 개선')),
                ('newchallenge', models.IntegerField(default=0, verbose_name='새로운 도전')),
                ('friends', models.IntegerField(default=0, verbose_name='친구와 함께')),
                ('awareness', models.IntegerField(default=0, verbose_name='도전 의식')),
                ('confidence', models.IntegerField(default=0, verbose_name='자신감')),
                ('output', models.IntegerField(default=0, verbose_name='산출물')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'db_table': 'user_tag',
            },
        ),
    ]
